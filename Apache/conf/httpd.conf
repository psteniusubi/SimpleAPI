LoadModule mpm_event_module ${ModulesDir}/mod_mpm_event.so
TypesConfig /etc/mime.types
<IfModule !log_config_module>
    LoadModule log_config_module ${ModulesDir}/mod_log_config.so
</IfModule>
LoadModule mime_module ${ModulesDir}/mod_mime.so
LoadModule alias_module ${ModulesDir}/mod_alias.so
LoadModule headers_module ${ModulesDir}/mod_headers.so
LoadModule authn_core_module ${ModulesDir}/mod_authn_core.so
LoadModule authz_core_module ${ModulesDir}/mod_authz_core.so
LoadModule authz_user_module ${ModulesDir}/mod_authz_user.so

LoadModule auth_openidc_module ${ModAuthOpenIDC}/mod_auth_openidc.so

PidFile ${InstanceRoot}/logs/httpd.pid
ErrorLog ${ErrorLog}
TransferLog ${InstanceRoot}/logs/access.log

Listen 5001
DocumentRoot ${InstanceRoot}/wwwroot

# CORS configuration

<If "-n %{HTTP:Origin}">
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Expose-Headers "WWW-Authenticate"
    #Header always set Access-Control-Max-Age "0"
    <If "%{REQUEST_METHOD} == 'OPTIONS' && -n %{HTTP:Access-Control-Request-Method}">
        Header always set Access-Control-Allow-Headers "Authorization"
        Redirect 204
    </If>
</If>

# OAuth 2.0 resource server

OIDCOAuthIntrospectionEndpoint https://login.example.ubidemo.com/uas/oauth2/introspection
#OIDCOAuthServerMetadataURL https://login.example.ubidemo.com/uas/.well-known/openid-configuration

OIDCOAuthClientID api
OIDCOAuthClientSecret secret

# OAuth 2.0 protected API 

<Location "/">

    AuthType oauth20
    AuthName api
    Require valid-user
    
    #Header always set WWW-Authenticate 'Bearer realm="api", scope="openid api"' 'expr=%{REQUEST_STATUS} eq 401'

</Location>

Alias /simple ${InstanceRoot}/hello.json
    
